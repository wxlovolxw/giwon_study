

direction에 대한 정보를 저장하는 변수를 미리 저장.

dx와 dy


입력

4 4
1 1 0
1 1 1 1
1 0 0 1
1 1 0 1
1 1 1 1

현재 위치는 x와 y를 사용

current_loc = (x,y)

direction = (dx,dy)

# map의 사이즈를 받아서 저장
n, m = map(int, input().split(''))

n, m을 통해 모든 값이 0으로 초기화 되어있는 2차원 리스트 생성 -> 방문위치를 생성하기 위함.

map_visit = [[0]*m for _ in range(n)]

그리고 초기 상태를 1로 만들어 준다.

first_loc_x, first_loc_y, direction = map(int, input().split)
info[first_loc_x, first_loc_y] = 1

전체 맵에 대한 정보를 저장한다.

map_info = []

for i in range(n):
    map_info.append(list(map(int, input().split())))

방향에 대한 정의
     1
1    O   1
     1
dx = [-1, 0, 1, 0]
dy = [0, 1, 0, -1]

순서대로 왼쪽, 위, 오른쪽, 왼쪽

회전에 대한 정의 -> 0-3까지의 값을 가지며 변하도록 해줘야 한다.

북쪽을 보고 있도록 초기화.
def turn_left():
    global direction
    direction -= 1
    if direction == -1:
        direction = 3

-> 이 값들을 이용하여 위치를 변화시킬때 사용한다. 따로 반환값이 필요하지 않다.

처음 위치는 무조건 1이므로 방문 카운트가 1로 초기화가 된다.
count = 1

turn_count = 0
으로 초기화 되어있으며, 한 자리에서 turn_count가 4가 되면 뒤로 한칸 가고, 그 뒤의 칸이 바다라면 종료

while True:

    회전만 실행
    turn_left()
    nx = x + dx[direction]
    ny = y + dy[direction]

    만약 정면에 방문하지 않은 칸이 있다면 이동하도록 한다.

    if map_info[nx][ny] == 0 and map_visit[nx][ny] == 0:
        map_visit[nx][ny] = 1
        x = nx
        y = ny
























