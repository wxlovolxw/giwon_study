스트리밍 사이트에서 장르 별로 가장 많이 재생된 노래를 두 개씩 모아 베스트 앨범을 출시하려 합니다. 노래는 고유 번호로 구분하며,
노래를 수록하는 기준은 다음과 같습니다.

속한 노래가 많이 재생된 장르를 먼저 수록합니다.
장르 내에서 많이 재생된 노래를 먼저 수록합니다.
장르 내에서 재생 횟수가 같은 노래 중에서는 고유 번호가 낮은 노래를 먼저 수록합니다.
노래의 장르를 나타내는 문자열 배열 genres와 노래별 재생 횟수를 나타내는 정수 배열 plays가 주어질 때, 베스트 앨범에 들어갈 노래의
고유 번호를 순서대로 return 하도록 solution 함수를 완성하세요.

제한사항

genres[i]는 고유번호가 i인 노래의 장르입니다.
plays[i]는 고유번호가 i인 노래가 재생된 횟수입니다.
genres와 plays의 길이는 같으며, 이는 1 이상 10,000 이하입니다.
장르 종류는 100개 미만입니다.
장르에 속한 곡이 하나라면, 하나의 곡만 선택합니다.
모든 장르는 재생된 횟수가 다릅니다.

입출력 예

genres	                                plays	                    return
[classic, pop, classic, classic, pop]	[500, 600, 150, 800, 2500]	[4, 1, 3, 0]

입출력 예 설명
classic 장르는 1,450회 재생되었으며, classic 노래는 다음과 같습니다.

고유 번호 3: 800회 재생
고유 번호 0: 500회 재생
고유 번호 2: 150회 재생

pop 장르는 3,100회 재생되었으며, pop 노래는 다음과 같습니다.

고유 번호 4: 2,500회 재생
고유 번호 1: 600회 재생

따라서 pop 장르의 [4, 1]번 노래를 먼저, classic 장르의 [3, 0]번 노래를 그다음에 수록합니다.


//////////////////////////////////////////////////////////////////////////////////////

먼저 인덱스를 키로 갖는 딕셔너리를 생성하는것이 좋을 것 같다.

def solution(genres, plays):

    dict = {}
    for i, genre in enumerate(genres) :
        dict[i] = [genre]

    for i, play in enumerate(plays) :
        dict[i].append(play)

    return dict

>> {0: ['classic', 500], 1: ['pop', 600], 2: ['classic', 150], 3: ['classic', 800], 4: ['pop', 2500]}
의 형태를 가진 딕셔너리를 생성하였다. 이 방식이 효율적인 방식인가?

장르별로 합을 구해서 순서를 매기는 방식은 어떻게 되는지??

->>key값에 튜플의 형태로 순서를 매기는 순서를 매길수있다.(우선순위)
a.sort(key=lambda x : ())의 형태를 사용한다.

-> dict은 sort가 되지 않는다. 그렇다면 그냥 리스트의 형태를 사용하는 것이 좋을 것 같다.

//////////////////////////////////////////////////////////////////////////////////

1) 장르를 기준으로 리스트를 분리하여 최종합의 값을 얻고, 가장 큰 두개의 값만을 반환한다.

2) 장르의 최종합 순으로 두개의값들을 순서를 매기고, 리스트를 합친다.

3) key값인 인덱스들을 반환한다.

의 순서를 따라서 한번 해보자.

////////////////////////////////////////////////////////////////////////////////////

a = list(map(lambda x,y : [x[0],x[1],y], enumerate(genres),plays))

-> [[0, 'classic', 500], [1, 'pop', 600], [2, 'classic', 150], [3, 'classic', 800], [4, 'pop', 2500]]

빈 리스트를 만들어 각 장르와 총합을 구해 순서를 구할 용도로 사용한다.
[]
[['classic', 500]] -> classic과 500이 추가된다.
[['classic', 500], ['pop', 600]] -> pop도 없으므로 팝이 추가된다.
[['classic', 650], ['pop', 600]] -> classic이 있으므로 더해진다.

dict = {}

for tup in a :
    if tup[1] not in dict.keys() :
        dict[tup[1]] = tup[2]
    else :
        dict[tup[1]] = dict[tup[1]] + tup[2]

/////////////////////////////////////////////////////////////////////////////////////


각각의 인덱스에 대해서 요소가 세개인 튜플을 생성한다.

순서대로 장르의 카운트수, 재생횟수, 인덱스 이렇게 세개의 값을 갖는 튜플을 생성하고,

sort를 통해 분류해 그 순서를 매겨주면 될 것 같다.

먼저 장르별로 카운트수를 받아주는 딕셔너리를 생성하고,

재생횟수를 받는 딕셔너리를 통해 총 두개의 딕셔너리를 생성해야한다.

dict에 요소들의 count를 저장할 때 없으면 추가하고 있으면 count += 1을 해주는 방법 밖에 없는가












