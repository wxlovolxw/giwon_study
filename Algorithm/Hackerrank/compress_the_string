In this task, we would like for you to appreciate the usefulness of the groupby()
function of itertools . To read more about this function, Check this out .

groupby() 함수를 이용해 문자열을 분리해 보자.

You are given a string S. Suppose a character 'c' occurs consecutively X times
in the string. Replace these consecutive occurrences of the character 'c'
with (X,c) in the string.

문자열 S 내에서 문자 c가 연속적으로 X번 반복된다면 문자 c대신에 (X,c)를 대입한다.

For a better understanding of the problem, check the explanation.


Input Format

A single line of input consisting of the string S.


Output Format

A single line of output consisting of the modified string.

Constraints

All the characters of S denote integers between 0 and 9.
1<=|S|<=10^4


Sample Input

1222311

Sample Output

(1, 1) (3, 2) (1, 3) (2, 1)


Explanation

First, the character 1 occurs only once. It is replaced by (1,1). Then the character 2
occurs three times, and it is replaced by (3,2) and so on.

Also, note the single space within each compression and between the compressions.

////////////////////////////////////////////////////////////////////////////////

임의의 숫자로 구성된 문자열이 들어왔을 때, 각각의 숫자가 연속적으로 몇번 반복되는지를
순서쌍의 형태로 반환하는 것이 목표.

해당 문자가 다음 순서의 문자와 일치하는지만 확인? -> 루프 1회는 필수적인가?

루프를 1회 도는 코드를 작성 해보자.

def groupby(S) :

    list_S = S # 입력값을 리스트의 형태로 저장.


    for n in list_S :


//////////////////////////////////////////////////////////////////////////////////

반복횟수를 세는 방식.

    ex) 1222311

    첫번째 숫자가 두번째 숫자와 같은지 확인. 같지 않다면, (1,1)를 결과 리스트에 추가.

    result.append((count,num))  #count의 값을 1로 초기화. 카운트는 그대로.

    두번째 숫자와 세번째 숫자가 같다면 count += 1를 해주고 세번째 숫자를 제거.
        -> 두번째 숫자에 대해서 다음숫자와 같은지 다시 반복.
            -> 세번째 숫자가 제거됨에 따라 두번째 숫자와 네번째 숫자를 비교
            -> 같기대문에 count+1을 다시 해주고 네번째 숫자를 제거.
                -> 두번째 숫자에 대해서 다시 다음숫자와 같은지 반복.
                -> 같지 않기 때문에 result.append((count,num))을 하고 세번째 숫자에 대해 시행.

    현 result = [(1,1), (3,2)]

    다섯번째 숫자가 세번째 숫자가 되어 그 다음 숫자와 비교.

///////////////////////////////////////////////////////////////////////////////////

함수 내에서 함수를 다시 사용하는 반복문을 써야 하는가?

    -> 그렇다면 2중 3중 반복문과 같으므로 매우 비 효율적일것이다.

///////////////////////////////////////////////////////////////////////////////////

