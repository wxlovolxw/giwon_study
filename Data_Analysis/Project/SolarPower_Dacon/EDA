

train.csv : 훈련용 데이터 (1개 파일)

- 3년(Day 0~ Day1094) 동안의 기상 데이터, 발전량(TARGET) 데이터



test.csv : 정답용 데이터 (81개 파일)

- 2년 동안의 기상 데이터, 발전량(TARGET) 데이터 제공

- 각 파일(*.csv)은 7일(Day 0~ Day6) 동안의 기상 데이터, 발전량(TARGET) 데이터로 구성

- 파일명 예시: 0.csv, 1.csv, 2.csv, …, 79.csv, 80.csv (순서는 랜덤이므로, 시계열 순서와 무관)

- 각 파일의 7일(Day 0~ Day6) 동안의 데이터 전체 혹은 일부를 인풋으로 사용하여, 향후 2일(Day7 ~ Day8) 동안의 30분 간격의 발전량(TARGET)을 예측 (1일당 48개씩 총 96개 타임스텝에 대한 예측)



sample_submission.csv : 정답제출 파일

- test 폴더의 각 파일에 대하여, 시간대별 발전량을 9개의 Quantile(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)에 맞춰 예측

- “파일명_날짜_시간” 형식(예시: 0.csv_Day7_0h00m ⇒ 0.csv 파일의 7일차 0시00분 예측 값)에 유의


///////////////////////////////////////////////////////////

Hour - 시간
Minute - 분
DHI - 수평면 산란일사량(Diffuse Horizontal Irradiance (W/m2))
DNI - 직달일사량(Direct Normal Irradiance (W/m2))
WS - 풍속(Wind Speed (m/s))
RH - 상대습도(Relative Humidity (%))
T - 기온(Temperature (Degree C))
Target - 태양광 발전량 (kW)


예시로 제시된 지역의 기상 데이터와 과거 발전량 데이터를 활용하여, 시간대별 태양광 발전량을 예측

/////////////////////////////////////////////////

기대효과: 시간대별 소비자 그룹의 전력소비량 예측 데이터와 결합하여 가장 효율적인 시간대별 태양광 발전과 국가 전력망을 조합 가능. 각 소비자 그룹에 최적화된 공급계획 수립 가능.

//////////////////////////////////////////////////////////


정답양식

30분간격의예측값에대한
10 %, 20 %,...90 % quantile

Pinballloss

High penalty to underforecast above 50 % percentiles
High penalty to overforecast below
50 % percentiles 높은 quantile 값에서는 측정된 값이 예측값보다 낮아야 함 >> overforecast 유도
반대로 낮은 quantile값에서는 측정된 값이 예측값보다 높아야 함 >> underforecast 유도

Lτ(y,z) = if y>=z, (y-z)τ
        = if z>y , (z-y)(1-τ)

τ: 퀀타일 값(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)

y: 실제 값

z: 퀀타일 예측값

Lτ: pinball loss 함수

->  퀀타일값 9개에 대해서 9번 예측

https://medium.com/analytics-vidhya/a-tutorial-on-quantile-regression-quantile-random-forests-and-quantile-gbm-d3c651af7516

Pinball Loss에 대한 Kaggle discussion을 공유합니다.

Loss function에 대한 수치적인 이해가 있다면 성능을 높이기에 더욱 유리하지 않을까 싶네요!

https://www.kaggle.com/c/m5-forecasting-uncertainty/discussion/137098#779205

////////////////////////////////////////////////////////

-> 기본적인 태양광 발전의 과정은 광전효과를 통해 생성되므로, 패널에 닿는 일사량이 가장 중요할 것이라 생각된다.

DHI - 수평면 산란일사량(Diffuse Horizontal Irradiance (W/m2))
DNI - 직달일사량(Direct Normal Irradiance (W/m2))

DHI 산란 일사량을 살펴본 결과 5만2천개의 데이터 중에서 3만개의 데이터가 0의 값을 갖는다.
산란 일사량이란  대기, 구름 등에 의해 다중 산란된 태양복사

DNI 직달 일사량은 대기에 산란, 흡수, 감퇴되지 않고, 지표면에 수직으로 도달하는 일사
마찬가지로 약 3만개의 데이터가 0의 값을 갖는다.

DHI와 DNI를 통틀어 전천일사 (global solar radiation)이라 한다. -> GSR 이라 하겠다.
-> 전천 일사량 컬럼을 보는것도 중요할 것 같다.
합쳐서 GSR이라 했는데 26600개의 데이터가 0개로, 둘 따로 봤을떄보다 0의 값을 갖는 데이터가 적어졌다.

-> DNI와 DHI를 합친 GSR과 TARGET과의 관계를 살펴본 결과, 따로본것과는 다르게 좀더 명확한 관계를 얻을 수 있었다.

-> GSR이 0인 데이터들은 모두 TARGET이 0이라는 것을 확인했다.

-> 그렇다면 GSR이 0인값들의 TARGER이 0이 되므로 이상치로 제거를 한 뒤 생각을 해야 하는가? -> 고려해봐야 할 것 같다.

-> GSR이 0인 경우에만 TARGET이 0이 아니라는 것을 확인 하였다. -> 이 값들을 이상치로 제거하는 것이 좋을 것 같다.

////////////////////////////////////////////////////////////////////////////////////////////

EDA

------------------------------------------------------------------

개별 데이터의 우선적인 확인

    - TARGET

        train_data['TARGET'].value_counts()

        train_data['TARGET'].describe()

        을 통해 확인해본 결과, 26660개의 컬럼이 0의 값을 가졌다.
        너무 많은 수의 컬럼이 0이므로 데이터의 편향이 우려된다.

        -> 이 값들의 처리에 대해서 생각해야 한다.

            count    52560.000000
            mean        17.790630
            std         25.759955
            min          0.000000
            25%          0.000000
            50%          0.000000
            75%         32.089890
            max         99.913939

        평균적으로 17이며, 제일 큰 값은 99까지 였다. 플랏을 통해 확인해보자.









타겟과의 관계 확인


















insight 도출하기

    1) 시간에 따라 값이 다른 것을 통해 시계열을 사용해야 할 것 같다.

    2) DNI와 DHI가 모두 일사량과 관계가 있으므로, 통합하고, 이 일사량이 시간 및 분과 관련이 있을 것 같다.

    3) 이 일사량과 온도에도 관계가 있을 것 같으므로 다중공선성에 유의하며 분석해야 한다.













































